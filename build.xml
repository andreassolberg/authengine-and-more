<?xml version="1.0" encoding="UTF-8"?>
<project name="connect-auth-engine" default="build">
  <target name="build"
          depends="prepare,lint,pdepend,phpcs-ci,phpcpd,phpunit" />

  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${basedir}/build/api"/>
    <delete dir="${basedir}/build/coverage"/>
    <delete dir="${basedir}/build/logs"/>
    <delete dir="${basedir}/build/pdepend"/>
   </target>

  <target name="prepare" depends="clean" description="Prepare for build">
    <mkdir dir="${basedir}/build/api"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/pdepend"/>
    <mkdir dir="${basedir}/build/phpdox"/>
  </target>

  <target name="check-composer-present" depends="prepare">
    <available file="build/composer.phar" property="composer.present"/>
  </target>
  <target name="download-composer" depends="prepare,check-composer-present" unless="composer.present" description="Download composer">
    <get src="https://getcomposer.org/composer.phar" dest="build/composer.phar"/>
  </target>
  <target name="vendor-uptodate">
    <uptodate srcfile="composer.json" targetfile="vendor/autoload.php" property="vendor.uptodate"/>
  </target>
  <target name="composer-install" depends="download-composer,vendor-uptodate" unless="vendor.uptodate">
    <delete file="${basedir}/composer.lock"/>
    <exec executable="php" failonerror="true">
      <arg value="build/composer.phar"/>
      <arg value="install"/>
      <arg value="--ignore-platform-reqs"/>
    </exec>
  </target>

  <target name="lint" description="Perform syntax check of sourcecode files">
    <apply executable="php" failonerror="true">
      <arg value="-l" />

      <fileset dir="${basedir}/lib">
        <include name="**/*.php" />
        <modified />
      </fileset>

      <fileset dir="${basedir}/tests">
        <include name="**/*.php" />
        <modified />
      </fileset>

      <fileset dir="${basedir}/www">
        <include name="**/*.php" />
        <modified />
      </fileset>

    </apply>
  </target>

  <target name="pdepend" depends="composer-install" description="Calculate software metrics using PHP_Depend">
    <exec executable="./vendor/bin/pdepend">
      <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
      <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
      <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
      <arg path="${basedir}/lib,${basedir}/templates,${basedir}/tests,${basedir}/www" />
    </exec>
  </target>


  <target name="phpcs" depends="composer-install"
          description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="./vendor/bin/phpcs">
      <arg value="--standard=PSR1"/>
      <arg path="${basedir}/lib" />
      <arg path="${basedir}/templates" />
      <arg path="${basedir}/tests" />
      <arg path="${basedir}/www" />
    </exec>
  </target>

  <target name="phpcs-ci" depends="composer-install" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <exec executable="./vendor/bin/phpcs">
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
      <arg value="--standard=PSR1"/>
      <arg path="${basedir}/lib" />
      <arg path="${basedir}/templates" />
      <arg path="${basedir}/tests" />
      <arg path="${basedir}/www" />
    </exec>
  </target>

  <target name="phpcpd" depends="composer-install" description="Find duplicate code using PHPCPD">
    <exec executable="./vendor/bin/phpcpd">
      <arg value="--log-pmd" />
      <arg value="${basedir}/build/logs/pmd-cpd.xml" />
      <arg path="${basedir}/lib" />
      <arg path="${basedir}/templates" />
      <arg path="${basedir}/tests" />
      <arg path="${basedir}/www" />
    </exec>
  </target>

  <target name="phpunit" depends="composer-install" description="Run unit tests with PHPUnit">
    <exec executable="./vendor/bin/phpunit" failonerror="true">
    </exec>
  </target>

  <target name="phpdox" description="Generate API documentation using phpDox">
    <exec executable="phpdox">
      <arg value="-c"/>
      <arg value="phpunit-ci.xml"/>
    </exec>
  </target>

</project>
